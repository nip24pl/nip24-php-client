<?php
/**
 * BillingPlan
 *
 * PHP version 5
 *
 * @category Class
 * @package  NIP24
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NIP24 Service
 *
 * NIP24 Service
 *
 * OpenAPI spec version: 1.3.5
 * Contact: kontakt@nip24.pl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.41
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace NIP24\Model;

use \ArrayAccess;
use \NIP24\ObjectSerializer;

/**
 * BillingPlan Class Doc Comment
 *
 * @category Class
 * @package  NIP24
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BillingPlan implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BillingPlan';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'name' => 'string',
'subscription_price' => 'double',
'item_price' => 'double',
'item_price_check_status' => 'double',
'item_price_invoice_data' => 'double',
'item_price_all_data' => 'double',
'item_price_iban_status' => 'double',
'item_price_wl_status' => 'double',
'item_price_search_vat' => 'double',
'limit' => 'int',
'request_delay' => 'int',
'domain_limit' => 'int',
'overplan_allowed' => 'bool',
'teryt_codes' => 'bool',
'excel_addin' => 'bool',
'jpk_vat' => 'bool',
'cli' => 'bool',
'stats' => 'bool',
'nip_monitor' => 'bool',
'search_by_nip' => 'bool',
'search_by_regon' => 'bool',
'search_by_krs' => 'bool',
'func_is_active' => 'bool',
'func_get_invoice_data' => 'bool',
'func_get_all_data' => 'bool',
'func_get_vies_data' => 'bool',
'func_get_vat_status' => 'bool',
'func_get_iban_status' => 'bool',
'func_get_wl_status' => 'bool',
'func_search_vat' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'name' => null,
'subscription_price' => 'double',
'item_price' => 'double',
'item_price_check_status' => 'double',
'item_price_invoice_data' => 'double',
'item_price_all_data' => 'double',
'item_price_iban_status' => 'double',
'item_price_wl_status' => 'double',
'item_price_search_vat' => 'double',
'limit' => 'int32',
'request_delay' => 'int32',
'domain_limit' => 'int32',
'overplan_allowed' => null,
'teryt_codes' => null,
'excel_addin' => null,
'jpk_vat' => null,
'cli' => null,
'stats' => null,
'nip_monitor' => null,
'search_by_nip' => null,
'search_by_regon' => null,
'search_by_krs' => null,
'func_is_active' => null,
'func_get_invoice_data' => null,
'func_get_all_data' => null,
'func_get_vies_data' => null,
'func_get_vat_status' => null,
'func_get_iban_status' => null,
'func_get_wl_status' => null,
'func_search_vat' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
'subscription_price' => 'subscriptionPrice',
'item_price' => 'itemPrice',
'item_price_check_status' => 'itemPriceCheckStatus',
'item_price_invoice_data' => 'itemPriceInvoiceData',
'item_price_all_data' => 'itemPriceAllData',
'item_price_iban_status' => 'itemPriceIBANStatus',
'item_price_wl_status' => 'itemPriceWLStatus',
'item_price_search_vat' => 'itemPriceSearchVAT',
'limit' => 'limit',
'request_delay' => 'requestDelay',
'domain_limit' => 'domainLimit',
'overplan_allowed' => 'overplanAllowed',
'teryt_codes' => 'terytCodes',
'excel_addin' => 'excelAddin',
'jpk_vat' => 'jpkVat',
'cli' => 'cli',
'stats' => 'stats',
'nip_monitor' => 'nipMonitor',
'search_by_nip' => 'searchByNip',
'search_by_regon' => 'searchByRegon',
'search_by_krs' => 'searchByKrs',
'func_is_active' => 'funcIsActive',
'func_get_invoice_data' => 'funcGetInvoiceData',
'func_get_all_data' => 'funcGetAllData',
'func_get_vies_data' => 'funcGetVIESData',
'func_get_vat_status' => 'funcGetVATStatus',
'func_get_iban_status' => 'funcGetIBANStatus',
'func_get_wl_status' => 'funcGetWLStatus',
'func_search_vat' => 'funcSearchVAT'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
'subscription_price' => 'setSubscriptionPrice',
'item_price' => 'setItemPrice',
'item_price_check_status' => 'setItemPriceCheckStatus',
'item_price_invoice_data' => 'setItemPriceInvoiceData',
'item_price_all_data' => 'setItemPriceAllData',
'item_price_iban_status' => 'setItemPriceIbanStatus',
'item_price_wl_status' => 'setItemPriceWlStatus',
'item_price_search_vat' => 'setItemPriceSearchVat',
'limit' => 'setLimit',
'request_delay' => 'setRequestDelay',
'domain_limit' => 'setDomainLimit',
'overplan_allowed' => 'setOverplanAllowed',
'teryt_codes' => 'setTerytCodes',
'excel_addin' => 'setExcelAddin',
'jpk_vat' => 'setJpkVat',
'cli' => 'setCli',
'stats' => 'setStats',
'nip_monitor' => 'setNipMonitor',
'search_by_nip' => 'setSearchByNip',
'search_by_regon' => 'setSearchByRegon',
'search_by_krs' => 'setSearchByKrs',
'func_is_active' => 'setFuncIsActive',
'func_get_invoice_data' => 'setFuncGetInvoiceData',
'func_get_all_data' => 'setFuncGetAllData',
'func_get_vies_data' => 'setFuncGetViesData',
'func_get_vat_status' => 'setFuncGetVatStatus',
'func_get_iban_status' => 'setFuncGetIbanStatus',
'func_get_wl_status' => 'setFuncGetWlStatus',
'func_search_vat' => 'setFuncSearchVat'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
'subscription_price' => 'getSubscriptionPrice',
'item_price' => 'getItemPrice',
'item_price_check_status' => 'getItemPriceCheckStatus',
'item_price_invoice_data' => 'getItemPriceInvoiceData',
'item_price_all_data' => 'getItemPriceAllData',
'item_price_iban_status' => 'getItemPriceIbanStatus',
'item_price_wl_status' => 'getItemPriceWlStatus',
'item_price_search_vat' => 'getItemPriceSearchVat',
'limit' => 'getLimit',
'request_delay' => 'getRequestDelay',
'domain_limit' => 'getDomainLimit',
'overplan_allowed' => 'getOverplanAllowed',
'teryt_codes' => 'getTerytCodes',
'excel_addin' => 'getExcelAddin',
'jpk_vat' => 'getJpkVat',
'cli' => 'getCli',
'stats' => 'getStats',
'nip_monitor' => 'getNipMonitor',
'search_by_nip' => 'getSearchByNip',
'search_by_regon' => 'getSearchByRegon',
'search_by_krs' => 'getSearchByKrs',
'func_is_active' => 'getFuncIsActive',
'func_get_invoice_data' => 'getFuncGetInvoiceData',
'func_get_all_data' => 'getFuncGetAllData',
'func_get_vies_data' => 'getFuncGetViesData',
'func_get_vat_status' => 'getFuncGetVatStatus',
'func_get_iban_status' => 'getFuncGetIbanStatus',
'func_get_wl_status' => 'getFuncGetWlStatus',
'func_search_vat' => 'getFuncSearchVat'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['subscription_price'] = isset($data['subscription_price']) ? $data['subscription_price'] : null;
        $this->container['item_price'] = isset($data['item_price']) ? $data['item_price'] : null;
        $this->container['item_price_check_status'] = isset($data['item_price_check_status']) ? $data['item_price_check_status'] : null;
        $this->container['item_price_invoice_data'] = isset($data['item_price_invoice_data']) ? $data['item_price_invoice_data'] : null;
        $this->container['item_price_all_data'] = isset($data['item_price_all_data']) ? $data['item_price_all_data'] : null;
        $this->container['item_price_iban_status'] = isset($data['item_price_iban_status']) ? $data['item_price_iban_status'] : null;
        $this->container['item_price_wl_status'] = isset($data['item_price_wl_status']) ? $data['item_price_wl_status'] : null;
        $this->container['item_price_search_vat'] = isset($data['item_price_search_vat']) ? $data['item_price_search_vat'] : null;
        $this->container['limit'] = isset($data['limit']) ? $data['limit'] : null;
        $this->container['request_delay'] = isset($data['request_delay']) ? $data['request_delay'] : null;
        $this->container['domain_limit'] = isset($data['domain_limit']) ? $data['domain_limit'] : null;
        $this->container['overplan_allowed'] = isset($data['overplan_allowed']) ? $data['overplan_allowed'] : null;
        $this->container['teryt_codes'] = isset($data['teryt_codes']) ? $data['teryt_codes'] : null;
        $this->container['excel_addin'] = isset($data['excel_addin']) ? $data['excel_addin'] : null;
        $this->container['jpk_vat'] = isset($data['jpk_vat']) ? $data['jpk_vat'] : null;
        $this->container['cli'] = isset($data['cli']) ? $data['cli'] : null;
        $this->container['stats'] = isset($data['stats']) ? $data['stats'] : null;
        $this->container['nip_monitor'] = isset($data['nip_monitor']) ? $data['nip_monitor'] : null;
        $this->container['search_by_nip'] = isset($data['search_by_nip']) ? $data['search_by_nip'] : null;
        $this->container['search_by_regon'] = isset($data['search_by_regon']) ? $data['search_by_regon'] : null;
        $this->container['search_by_krs'] = isset($data['search_by_krs']) ? $data['search_by_krs'] : null;
        $this->container['func_is_active'] = isset($data['func_is_active']) ? $data['func_is_active'] : null;
        $this->container['func_get_invoice_data'] = isset($data['func_get_invoice_data']) ? $data['func_get_invoice_data'] : null;
        $this->container['func_get_all_data'] = isset($data['func_get_all_data']) ? $data['func_get_all_data'] : null;
        $this->container['func_get_vies_data'] = isset($data['func_get_vies_data']) ? $data['func_get_vies_data'] : null;
        $this->container['func_get_vat_status'] = isset($data['func_get_vat_status']) ? $data['func_get_vat_status'] : null;
        $this->container['func_get_iban_status'] = isset($data['func_get_iban_status']) ? $data['func_get_iban_status'] : null;
        $this->container['func_get_wl_status'] = isset($data['func_get_wl_status']) ? $data['func_get_wl_status'] : null;
        $this->container['func_search_vat'] = isset($data['func_search_vat']) ? $data['func_search_vat'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['subscription_price'] === null) {
            $invalidProperties[] = "'subscription_price' can't be null";
        }
        if ($this->container['limit'] === null) {
            $invalidProperties[] = "'limit' can't be null";
        }
        if ($this->container['request_delay'] === null) {
            $invalidProperties[] = "'request_delay' can't be null";
        }
        if ($this->container['domain_limit'] === null) {
            $invalidProperties[] = "'domain_limit' can't be null";
        }
        if ($this->container['overplan_allowed'] === null) {
            $invalidProperties[] = "'overplan_allowed' can't be null";
        }
        if ($this->container['teryt_codes'] === null) {
            $invalidProperties[] = "'teryt_codes' can't be null";
        }
        if ($this->container['excel_addin'] === null) {
            $invalidProperties[] = "'excel_addin' can't be null";
        }
        if ($this->container['jpk_vat'] === null) {
            $invalidProperties[] = "'jpk_vat' can't be null";
        }
        if ($this->container['cli'] === null) {
            $invalidProperties[] = "'cli' can't be null";
        }
        if ($this->container['stats'] === null) {
            $invalidProperties[] = "'stats' can't be null";
        }
        if ($this->container['nip_monitor'] === null) {
            $invalidProperties[] = "'nip_monitor' can't be null";
        }
        if ($this->container['search_by_nip'] === null) {
            $invalidProperties[] = "'search_by_nip' can't be null";
        }
        if ($this->container['search_by_regon'] === null) {
            $invalidProperties[] = "'search_by_regon' can't be null";
        }
        if ($this->container['search_by_krs'] === null) {
            $invalidProperties[] = "'search_by_krs' can't be null";
        }
        if ($this->container['func_is_active'] === null) {
            $invalidProperties[] = "'func_is_active' can't be null";
        }
        if ($this->container['func_get_invoice_data'] === null) {
            $invalidProperties[] = "'func_get_invoice_data' can't be null";
        }
        if ($this->container['func_get_all_data'] === null) {
            $invalidProperties[] = "'func_get_all_data' can't be null";
        }
        if ($this->container['func_get_vies_data'] === null) {
            $invalidProperties[] = "'func_get_vies_data' can't be null";
        }
        if ($this->container['func_get_vat_status'] === null) {
            $invalidProperties[] = "'func_get_vat_status' can't be null";
        }
        if ($this->container['func_get_iban_status'] === null) {
            $invalidProperties[] = "'func_get_iban_status' can't be null";
        }
        if ($this->container['func_get_wl_status'] === null) {
            $invalidProperties[] = "'func_get_wl_status' can't be null";
        }
        if ($this->container['func_search_vat'] === null) {
            $invalidProperties[] = "'func_search_vat' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets subscription_price
     *
     * @return double
     */
    public function getSubscriptionPrice()
    {
        return $this->container['subscription_price'];
    }

    /**
     * Sets subscription_price
     *
     * @param double $subscription_price subscription_price
     *
     * @return $this
     */
    public function setSubscriptionPrice($subscription_price)
    {
        $this->container['subscription_price'] = $subscription_price;

        return $this;
    }

    /**
     * Gets item_price
     *
     * @return double
     */
    public function getItemPrice()
    {
        return $this->container['item_price'];
    }

    /**
     * Sets item_price
     *
     * @param double $item_price item_price
     *
     * @return $this
     */
    public function setItemPrice($item_price)
    {
        $this->container['item_price'] = $item_price;

        return $this;
    }

    /**
     * Gets item_price_check_status
     *
     * @return double
     */
    public function getItemPriceCheckStatus()
    {
        return $this->container['item_price_check_status'];
    }

    /**
     * Sets item_price_check_status
     *
     * @param double $item_price_check_status item_price_check_status
     *
     * @return $this
     */
    public function setItemPriceCheckStatus($item_price_check_status)
    {
        $this->container['item_price_check_status'] = $item_price_check_status;

        return $this;
    }

    /**
     * Gets item_price_invoice_data
     *
     * @return double
     */
    public function getItemPriceInvoiceData()
    {
        return $this->container['item_price_invoice_data'];
    }

    /**
     * Sets item_price_invoice_data
     *
     * @param double $item_price_invoice_data item_price_invoice_data
     *
     * @return $this
     */
    public function setItemPriceInvoiceData($item_price_invoice_data)
    {
        $this->container['item_price_invoice_data'] = $item_price_invoice_data;

        return $this;
    }

    /**
     * Gets item_price_all_data
     *
     * @return double
     */
    public function getItemPriceAllData()
    {
        return $this->container['item_price_all_data'];
    }

    /**
     * Sets item_price_all_data
     *
     * @param double $item_price_all_data item_price_all_data
     *
     * @return $this
     */
    public function setItemPriceAllData($item_price_all_data)
    {
        $this->container['item_price_all_data'] = $item_price_all_data;

        return $this;
    }

    /**
     * Gets item_price_iban_status
     *
     * @return double
     */
    public function getItemPriceIbanStatus()
    {
        return $this->container['item_price_iban_status'];
    }

    /**
     * Sets item_price_iban_status
     *
     * @param double $item_price_iban_status item_price_iban_status
     *
     * @return $this
     */
    public function setItemPriceIbanStatus($item_price_iban_status)
    {
        $this->container['item_price_iban_status'] = $item_price_iban_status;

        return $this;
    }

    /**
     * Gets item_price_wl_status
     *
     * @return double
     */
    public function getItemPriceWlStatus()
    {
        return $this->container['item_price_wl_status'];
    }

    /**
     * Sets item_price_wl_status
     *
     * @param double $item_price_wl_status item_price_wl_status
     *
     * @return $this
     */
    public function setItemPriceWlStatus($item_price_wl_status)
    {
        $this->container['item_price_wl_status'] = $item_price_wl_status;

        return $this;
    }

    /**
     * Gets item_price_search_vat
     *
     * @return double
     */
    public function getItemPriceSearchVat()
    {
        return $this->container['item_price_search_vat'];
    }

    /**
     * Sets item_price_search_vat
     *
     * @param double $item_price_search_vat item_price_search_vat
     *
     * @return $this
     */
    public function setItemPriceSearchVat($item_price_search_vat)
    {
        $this->container['item_price_search_vat'] = $item_price_search_vat;

        return $this;
    }

    /**
     * Gets limit
     *
     * @return int
     */
    public function getLimit()
    {
        return $this->container['limit'];
    }

    /**
     * Sets limit
     *
     * @param int $limit limit
     *
     * @return $this
     */
    public function setLimit($limit)
    {
        $this->container['limit'] = $limit;

        return $this;
    }

    /**
     * Gets request_delay
     *
     * @return int
     */
    public function getRequestDelay()
    {
        return $this->container['request_delay'];
    }

    /**
     * Sets request_delay
     *
     * @param int $request_delay request_delay
     *
     * @return $this
     */
    public function setRequestDelay($request_delay)
    {
        $this->container['request_delay'] = $request_delay;

        return $this;
    }

    /**
     * Gets domain_limit
     *
     * @return int
     */
    public function getDomainLimit()
    {
        return $this->container['domain_limit'];
    }

    /**
     * Sets domain_limit
     *
     * @param int $domain_limit domain_limit
     *
     * @return $this
     */
    public function setDomainLimit($domain_limit)
    {
        $this->container['domain_limit'] = $domain_limit;

        return $this;
    }

    /**
     * Gets overplan_allowed
     *
     * @return bool
     */
    public function getOverplanAllowed()
    {
        return $this->container['overplan_allowed'];
    }

    /**
     * Sets overplan_allowed
     *
     * @param bool $overplan_allowed overplan_allowed
     *
     * @return $this
     */
    public function setOverplanAllowed($overplan_allowed)
    {
        $this->container['overplan_allowed'] = $overplan_allowed;

        return $this;
    }

    /**
     * Gets teryt_codes
     *
     * @return bool
     */
    public function getTerytCodes()
    {
        return $this->container['teryt_codes'];
    }

    /**
     * Sets teryt_codes
     *
     * @param bool $teryt_codes teryt_codes
     *
     * @return $this
     */
    public function setTerytCodes($teryt_codes)
    {
        $this->container['teryt_codes'] = $teryt_codes;

        return $this;
    }

    /**
     * Gets excel_addin
     *
     * @return bool
     */
    public function getExcelAddin()
    {
        return $this->container['excel_addin'];
    }

    /**
     * Sets excel_addin
     *
     * @param bool $excel_addin excel_addin
     *
     * @return $this
     */
    public function setExcelAddin($excel_addin)
    {
        $this->container['excel_addin'] = $excel_addin;

        return $this;
    }

    /**
     * Gets jpk_vat
     *
     * @return bool
     */
    public function getJpkVat()
    {
        return $this->container['jpk_vat'];
    }

    /**
     * Sets jpk_vat
     *
     * @param bool $jpk_vat jpk_vat
     *
     * @return $this
     */
    public function setJpkVat($jpk_vat)
    {
        $this->container['jpk_vat'] = $jpk_vat;

        return $this;
    }

    /**
     * Gets cli
     *
     * @return bool
     */
    public function getCli()
    {
        return $this->container['cli'];
    }

    /**
     * Sets cli
     *
     * @param bool $cli cli
     *
     * @return $this
     */
    public function setCli($cli)
    {
        $this->container['cli'] = $cli;

        return $this;
    }

    /**
     * Gets stats
     *
     * @return bool
     */
    public function getStats()
    {
        return $this->container['stats'];
    }

    /**
     * Sets stats
     *
     * @param bool $stats stats
     *
     * @return $this
     */
    public function setStats($stats)
    {
        $this->container['stats'] = $stats;

        return $this;
    }

    /**
     * Gets nip_monitor
     *
     * @return bool
     */
    public function getNipMonitor()
    {
        return $this->container['nip_monitor'];
    }

    /**
     * Sets nip_monitor
     *
     * @param bool $nip_monitor nip_monitor
     *
     * @return $this
     */
    public function setNipMonitor($nip_monitor)
    {
        $this->container['nip_monitor'] = $nip_monitor;

        return $this;
    }

    /**
     * Gets search_by_nip
     *
     * @return bool
     */
    public function getSearchByNip()
    {
        return $this->container['search_by_nip'];
    }

    /**
     * Sets search_by_nip
     *
     * @param bool $search_by_nip search_by_nip
     *
     * @return $this
     */
    public function setSearchByNip($search_by_nip)
    {
        $this->container['search_by_nip'] = $search_by_nip;

        return $this;
    }

    /**
     * Gets search_by_regon
     *
     * @return bool
     */
    public function getSearchByRegon()
    {
        return $this->container['search_by_regon'];
    }

    /**
     * Sets search_by_regon
     *
     * @param bool $search_by_regon search_by_regon
     *
     * @return $this
     */
    public function setSearchByRegon($search_by_regon)
    {
        $this->container['search_by_regon'] = $search_by_regon;

        return $this;
    }

    /**
     * Gets search_by_krs
     *
     * @return bool
     */
    public function getSearchByKrs()
    {
        return $this->container['search_by_krs'];
    }

    /**
     * Sets search_by_krs
     *
     * @param bool $search_by_krs search_by_krs
     *
     * @return $this
     */
    public function setSearchByKrs($search_by_krs)
    {
        $this->container['search_by_krs'] = $search_by_krs;

        return $this;
    }

    /**
     * Gets func_is_active
     *
     * @return bool
     */
    public function getFuncIsActive()
    {
        return $this->container['func_is_active'];
    }

    /**
     * Sets func_is_active
     *
     * @param bool $func_is_active func_is_active
     *
     * @return $this
     */
    public function setFuncIsActive($func_is_active)
    {
        $this->container['func_is_active'] = $func_is_active;

        return $this;
    }

    /**
     * Gets func_get_invoice_data
     *
     * @return bool
     */
    public function getFuncGetInvoiceData()
    {
        return $this->container['func_get_invoice_data'];
    }

    /**
     * Sets func_get_invoice_data
     *
     * @param bool $func_get_invoice_data func_get_invoice_data
     *
     * @return $this
     */
    public function setFuncGetInvoiceData($func_get_invoice_data)
    {
        $this->container['func_get_invoice_data'] = $func_get_invoice_data;

        return $this;
    }

    /**
     * Gets func_get_all_data
     *
     * @return bool
     */
    public function getFuncGetAllData()
    {
        return $this->container['func_get_all_data'];
    }

    /**
     * Sets func_get_all_data
     *
     * @param bool $func_get_all_data func_get_all_data
     *
     * @return $this
     */
    public function setFuncGetAllData($func_get_all_data)
    {
        $this->container['func_get_all_data'] = $func_get_all_data;

        return $this;
    }

    /**
     * Gets func_get_vies_data
     *
     * @return bool
     */
    public function getFuncGetViesData()
    {
        return $this->container['func_get_vies_data'];
    }

    /**
     * Sets func_get_vies_data
     *
     * @param bool $func_get_vies_data func_get_vies_data
     *
     * @return $this
     */
    public function setFuncGetViesData($func_get_vies_data)
    {
        $this->container['func_get_vies_data'] = $func_get_vies_data;

        return $this;
    }

    /**
     * Gets func_get_vat_status
     *
     * @return bool
     */
    public function getFuncGetVatStatus()
    {
        return $this->container['func_get_vat_status'];
    }

    /**
     * Sets func_get_vat_status
     *
     * @param bool $func_get_vat_status func_get_vat_status
     *
     * @return $this
     */
    public function setFuncGetVatStatus($func_get_vat_status)
    {
        $this->container['func_get_vat_status'] = $func_get_vat_status;

        return $this;
    }

    /**
     * Gets func_get_iban_status
     *
     * @return bool
     */
    public function getFuncGetIbanStatus()
    {
        return $this->container['func_get_iban_status'];
    }

    /**
     * Sets func_get_iban_status
     *
     * @param bool $func_get_iban_status func_get_iban_status
     *
     * @return $this
     */
    public function setFuncGetIbanStatus($func_get_iban_status)
    {
        $this->container['func_get_iban_status'] = $func_get_iban_status;

        return $this;
    }

    /**
     * Gets func_get_wl_status
     *
     * @return bool
     */
    public function getFuncGetWlStatus()
    {
        return $this->container['func_get_wl_status'];
    }

    /**
     * Sets func_get_wl_status
     *
     * @param bool $func_get_wl_status func_get_wl_status
     *
     * @return $this
     */
    public function setFuncGetWlStatus($func_get_wl_status)
    {
        $this->container['func_get_wl_status'] = $func_get_wl_status;

        return $this;
    }

    /**
     * Gets func_search_vat
     *
     * @return bool
     */
    public function getFuncSearchVat()
    {
        return $this->container['func_search_vat'];
    }

    /**
     * Sets func_search_vat
     *
     * @param bool $func_search_vat func_search_vat
     *
     * @return $this
     */
    public function setFuncSearchVat($func_search_vat)
    {
        $this->container['func_search_vat'] = $func_search_vat;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
