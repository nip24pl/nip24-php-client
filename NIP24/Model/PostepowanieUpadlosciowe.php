<?php
/**
 * PostepowanieUpadlosciowe
 *
 * PHP version 5
 *
 * @category Class
 * @package  NIP24
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NIP24 Service
 *
 * NIP24 Service
 *
 * OpenAPI spec version: 1.3.5
 * Contact: kontakt@nip24.pl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.41
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace NIP24\Model;

use \ArrayAccess;
use \NIP24\ObjectSerializer;

/**
 * PostepowanieUpadlosciowe Class Doc Comment
 *
 * @category Class
 * @package  NIP24
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PostepowanieUpadlosciowe implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PostepowanieUpadlosciowe';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'sposob_prowadzenia_postepowania' => 'string',
'informacja_o_uchyleniu_ukladu' => 'string',
'informacja_o_ogloszeniu_upadlosci' => '\NIP24\Model\InformacjaOOgloszeniuUpadlosci',
'opis_zakonczenia_procesu_upadlosci' => '\NIP24\Model\OpisZakonczeniaProcesuUpadlosci',
'dane_syndyka' => '\NIP24\Model\DaneSyndyka[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'sposob_prowadzenia_postepowania' => null,
'informacja_o_uchyleniu_ukladu' => null,
'informacja_o_ogloszeniu_upadlosci' => null,
'opis_zakonczenia_procesu_upadlosci' => null,
'dane_syndyka' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sposob_prowadzenia_postepowania' => 'sposobProwadzeniaPostepowania',
'informacja_o_uchyleniu_ukladu' => 'informacjaOUchyleniuUkladu',
'informacja_o_ogloszeniu_upadlosci' => 'informacjaOOgloszeniuUpadlosci',
'opis_zakonczenia_procesu_upadlosci' => 'opisZakonczeniaProcesuUpadlosci',
'dane_syndyka' => 'daneSyndyka'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sposob_prowadzenia_postepowania' => 'setSposobProwadzeniaPostepowania',
'informacja_o_uchyleniu_ukladu' => 'setInformacjaOUchyleniuUkladu',
'informacja_o_ogloszeniu_upadlosci' => 'setInformacjaOOgloszeniuUpadlosci',
'opis_zakonczenia_procesu_upadlosci' => 'setOpisZakonczeniaProcesuUpadlosci',
'dane_syndyka' => 'setDaneSyndyka'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sposob_prowadzenia_postepowania' => 'getSposobProwadzeniaPostepowania',
'informacja_o_uchyleniu_ukladu' => 'getInformacjaOUchyleniuUkladu',
'informacja_o_ogloszeniu_upadlosci' => 'getInformacjaOOgloszeniuUpadlosci',
'opis_zakonczenia_procesu_upadlosci' => 'getOpisZakonczeniaProcesuUpadlosci',
'dane_syndyka' => 'getDaneSyndyka'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sposob_prowadzenia_postepowania'] = isset($data['sposob_prowadzenia_postepowania']) ? $data['sposob_prowadzenia_postepowania'] : null;
        $this->container['informacja_o_uchyleniu_ukladu'] = isset($data['informacja_o_uchyleniu_ukladu']) ? $data['informacja_o_uchyleniu_ukladu'] : null;
        $this->container['informacja_o_ogloszeniu_upadlosci'] = isset($data['informacja_o_ogloszeniu_upadlosci']) ? $data['informacja_o_ogloszeniu_upadlosci'] : null;
        $this->container['opis_zakonczenia_procesu_upadlosci'] = isset($data['opis_zakonczenia_procesu_upadlosci']) ? $data['opis_zakonczenia_procesu_upadlosci'] : null;
        $this->container['dane_syndyka'] = isset($data['dane_syndyka']) ? $data['dane_syndyka'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sposob_prowadzenia_postepowania
     *
     * @return string
     */
    public function getSposobProwadzeniaPostepowania()
    {
        return $this->container['sposob_prowadzenia_postepowania'];
    }

    /**
     * Sets sposob_prowadzenia_postepowania
     *
     * @param string $sposob_prowadzenia_postepowania sposob_prowadzenia_postepowania
     *
     * @return $this
     */
    public function setSposobProwadzeniaPostepowania($sposob_prowadzenia_postepowania)
    {
        $this->container['sposob_prowadzenia_postepowania'] = $sposob_prowadzenia_postepowania;

        return $this;
    }

    /**
     * Gets informacja_o_uchyleniu_ukladu
     *
     * @return string
     */
    public function getInformacjaOUchyleniuUkladu()
    {
        return $this->container['informacja_o_uchyleniu_ukladu'];
    }

    /**
     * Sets informacja_o_uchyleniu_ukladu
     *
     * @param string $informacja_o_uchyleniu_ukladu informacja_o_uchyleniu_ukladu
     *
     * @return $this
     */
    public function setInformacjaOUchyleniuUkladu($informacja_o_uchyleniu_ukladu)
    {
        $this->container['informacja_o_uchyleniu_ukladu'] = $informacja_o_uchyleniu_ukladu;

        return $this;
    }

    /**
     * Gets informacja_o_ogloszeniu_upadlosci
     *
     * @return \NIP24\Model\InformacjaOOgloszeniuUpadlosci
     */
    public function getInformacjaOOgloszeniuUpadlosci()
    {
        return $this->container['informacja_o_ogloszeniu_upadlosci'];
    }

    /**
     * Sets informacja_o_ogloszeniu_upadlosci
     *
     * @param \NIP24\Model\InformacjaOOgloszeniuUpadlosci $informacja_o_ogloszeniu_upadlosci informacja_o_ogloszeniu_upadlosci
     *
     * @return $this
     */
    public function setInformacjaOOgloszeniuUpadlosci($informacja_o_ogloszeniu_upadlosci)
    {
        $this->container['informacja_o_ogloszeniu_upadlosci'] = $informacja_o_ogloszeniu_upadlosci;

        return $this;
    }

    /**
     * Gets opis_zakonczenia_procesu_upadlosci
     *
     * @return \NIP24\Model\OpisZakonczeniaProcesuUpadlosci
     */
    public function getOpisZakonczeniaProcesuUpadlosci()
    {
        return $this->container['opis_zakonczenia_procesu_upadlosci'];
    }

    /**
     * Sets opis_zakonczenia_procesu_upadlosci
     *
     * @param \NIP24\Model\OpisZakonczeniaProcesuUpadlosci $opis_zakonczenia_procesu_upadlosci opis_zakonczenia_procesu_upadlosci
     *
     * @return $this
     */
    public function setOpisZakonczeniaProcesuUpadlosci($opis_zakonczenia_procesu_upadlosci)
    {
        $this->container['opis_zakonczenia_procesu_upadlosci'] = $opis_zakonczenia_procesu_upadlosci;

        return $this;
    }

    /**
     * Gets dane_syndyka
     *
     * @return \NIP24\Model\DaneSyndyka[]
     */
    public function getDaneSyndyka()
    {
        return $this->container['dane_syndyka'];
    }

    /**
     * Sets dane_syndyka
     *
     * @param \NIP24\Model\DaneSyndyka[] $dane_syndyka dane_syndyka
     *
     * @return $this
     */
    public function setDaneSyndyka($dane_syndyka)
    {
        $this->container['dane_syndyka'] = $dane_syndyka;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
