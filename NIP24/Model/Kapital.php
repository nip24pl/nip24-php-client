<?php
/**
 * Kapital
 *
 * PHP version 5
 *
 * @category Class
 * @package  NIP24
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NIP24 Service
 *
 * NIP24 Service
 *
 * OpenAPI spec version: 1.3.5
 * Contact: kontakt@nip24.pl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.41
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace NIP24\Model;

use \ArrayAccess;
use \NIP24\ObjectSerializer;

/**
 * Kapital Class Doc Comment
 *
 * @category Class
 * @package  NIP24
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Kapital implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Kapital';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'wniesione_aporty' => 'object',
'laczna_liczba_akcji_udzialow' => 'string',
'wysokosc_kapitalu_zakladowego' => '\NIP24\Model\WysokoscKapitaluZakladowego',
'wartosc_jednej_akcji' => '\NIP24\Model\WartoscJednejAkcji',
'czesc_kapitalu_wplaconego_pokrytego' => '\NIP24\Model\CzescKapitaluWplaconegoPokrytego'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'wniesione_aporty' => null,
'laczna_liczba_akcji_udzialow' => null,
'wysokosc_kapitalu_zakladowego' => null,
'wartosc_jednej_akcji' => null,
'czesc_kapitalu_wplaconego_pokrytego' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'wniesione_aporty' => 'wniesioneAporty',
'laczna_liczba_akcji_udzialow' => 'lacznaLiczbaAkcjiUdzialow',
'wysokosc_kapitalu_zakladowego' => 'wysokoscKapitaluZakladowego',
'wartosc_jednej_akcji' => 'wartoscJednejAkcji',
'czesc_kapitalu_wplaconego_pokrytego' => 'czescKapitaluWplaconegoPokrytego'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'wniesione_aporty' => 'setWniesioneAporty',
'laczna_liczba_akcji_udzialow' => 'setLacznaLiczbaAkcjiUdzialow',
'wysokosc_kapitalu_zakladowego' => 'setWysokoscKapitaluZakladowego',
'wartosc_jednej_akcji' => 'setWartoscJednejAkcji',
'czesc_kapitalu_wplaconego_pokrytego' => 'setCzescKapitaluWplaconegoPokrytego'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'wniesione_aporty' => 'getWniesioneAporty',
'laczna_liczba_akcji_udzialow' => 'getLacznaLiczbaAkcjiUdzialow',
'wysokosc_kapitalu_zakladowego' => 'getWysokoscKapitaluZakladowego',
'wartosc_jednej_akcji' => 'getWartoscJednejAkcji',
'czesc_kapitalu_wplaconego_pokrytego' => 'getCzescKapitaluWplaconegoPokrytego'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['wniesione_aporty'] = isset($data['wniesione_aporty']) ? $data['wniesione_aporty'] : null;
        $this->container['laczna_liczba_akcji_udzialow'] = isset($data['laczna_liczba_akcji_udzialow']) ? $data['laczna_liczba_akcji_udzialow'] : null;
        $this->container['wysokosc_kapitalu_zakladowego'] = isset($data['wysokosc_kapitalu_zakladowego']) ? $data['wysokosc_kapitalu_zakladowego'] : null;
        $this->container['wartosc_jednej_akcji'] = isset($data['wartosc_jednej_akcji']) ? $data['wartosc_jednej_akcji'] : null;
        $this->container['czesc_kapitalu_wplaconego_pokrytego'] = isset($data['czesc_kapitalu_wplaconego_pokrytego']) ? $data['czesc_kapitalu_wplaconego_pokrytego'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets wniesione_aporty
     *
     * @return object
     */
    public function getWniesioneAporty()
    {
        return $this->container['wniesione_aporty'];
    }

    /**
     * Sets wniesione_aporty
     *
     * @param object $wniesione_aporty wniesione_aporty
     *
     * @return $this
     */
    public function setWniesioneAporty($wniesione_aporty)
    {
        $this->container['wniesione_aporty'] = $wniesione_aporty;

        return $this;
    }

    /**
     * Gets laczna_liczba_akcji_udzialow
     *
     * @return string
     */
    public function getLacznaLiczbaAkcjiUdzialow()
    {
        return $this->container['laczna_liczba_akcji_udzialow'];
    }

    /**
     * Sets laczna_liczba_akcji_udzialow
     *
     * @param string $laczna_liczba_akcji_udzialow laczna_liczba_akcji_udzialow
     *
     * @return $this
     */
    public function setLacznaLiczbaAkcjiUdzialow($laczna_liczba_akcji_udzialow)
    {
        $this->container['laczna_liczba_akcji_udzialow'] = $laczna_liczba_akcji_udzialow;

        return $this;
    }

    /**
     * Gets wysokosc_kapitalu_zakladowego
     *
     * @return \NIP24\Model\WysokoscKapitaluZakladowego
     */
    public function getWysokoscKapitaluZakladowego()
    {
        return $this->container['wysokosc_kapitalu_zakladowego'];
    }

    /**
     * Sets wysokosc_kapitalu_zakladowego
     *
     * @param \NIP24\Model\WysokoscKapitaluZakladowego $wysokosc_kapitalu_zakladowego wysokosc_kapitalu_zakladowego
     *
     * @return $this
     */
    public function setWysokoscKapitaluZakladowego($wysokosc_kapitalu_zakladowego)
    {
        $this->container['wysokosc_kapitalu_zakladowego'] = $wysokosc_kapitalu_zakladowego;

        return $this;
    }

    /**
     * Gets wartosc_jednej_akcji
     *
     * @return \NIP24\Model\WartoscJednejAkcji
     */
    public function getWartoscJednejAkcji()
    {
        return $this->container['wartosc_jednej_akcji'];
    }

    /**
     * Sets wartosc_jednej_akcji
     *
     * @param \NIP24\Model\WartoscJednejAkcji $wartosc_jednej_akcji wartosc_jednej_akcji
     *
     * @return $this
     */
    public function setWartoscJednejAkcji($wartosc_jednej_akcji)
    {
        $this->container['wartosc_jednej_akcji'] = $wartosc_jednej_akcji;

        return $this;
    }

    /**
     * Gets czesc_kapitalu_wplaconego_pokrytego
     *
     * @return \NIP24\Model\CzescKapitaluWplaconegoPokrytego
     */
    public function getCzescKapitaluWplaconegoPokrytego()
    {
        return $this->container['czesc_kapitalu_wplaconego_pokrytego'];
    }

    /**
     * Sets czesc_kapitalu_wplaconego_pokrytego
     *
     * @param \NIP24\Model\CzescKapitaluWplaconegoPokrytego $czesc_kapitalu_wplaconego_pokrytego czesc_kapitalu_wplaconego_pokrytego
     *
     * @return $this
     */
    public function setCzescKapitaluWplaconegoPokrytego($czesc_kapitalu_wplaconego_pokrytego)
    {
        $this->container['czesc_kapitalu_wplaconego_pokrytego'] = $czesc_kapitalu_wplaconego_pokrytego;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
